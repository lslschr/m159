#Generated Form Function
function GenerateForm {
########################################################################
# Code Generated By: SAPIEN Technologies PrimalForms (Community Edition) v1.0.10.0
# Generated On: 06.10.2020 12:18
# Generated By: Luis Lüscher
########################################################################

#region Import the Assemblies
[reflection.assembly]::loadwithpartialname("System.Windows.Forms") | Out-Null
[reflection.assembly]::loadwithpartialname("System.Drawing") | Out-Null

Import-Module ActiveDirectory
#endregion

    $path = "C:\Users\Administrator\Documents\scripts\ad_manager\Log"
    $date = get-date -Format "yyyy-MM-dd"
    $file = ("Log_" + $date + ".log")
    $logfile = $path + "\" + $file

    function Write-Log([string]$logtext, [int]$level = 0) {
        $logdate = get-date -Format "yyyy-MM-dd HH:mm:ss"
        if ($level -eq 0) {
            $logtext = "[INFO] " + $logtext
            $text = "[" + $logdate + "] - " + $logtext
        }
        $text >> $logfile
    }
    Write-Log "Starting the application"

#region Generated Form Objects
$form1 = New-Object System.Windows.Forms.Form
$btn_cnl = New-Object System.Windows.Forms.Button
$btn_imp = New-Object System.Windows.Forms.Button
$textBox1 = New-Object System.Windows.Forms.TextBox
$btn_filedialog = New-Object System.Windows.Forms.Button
$label1 = New-Object System.Windows.Forms.Label
$InitialFormWindowState = New-Object System.Windows.Forms.FormWindowState
#endregion Generated Form Objects

function get-path {
    Write-Log "Get path function started"
    $FileBrowser = New-Object System.Windows.Forms.OpenFileDialog
    $FileBrowser.Filter = "CSV-Dateien (*.csv)|*.csv"
    $FileBrowser.Title = "CSV Importieren"
    $FileBrowser.Multiselect = $false
    if($FileBrowser.ShowDialog() -eq "OK"){
        $textBox1.Text  = $FileBrowser.FileName
        $path = $textBox1.Text
        Write-Log "Textbox filled with path"
    }
}

function import-user {
Write-Log "Import user function started"

$path = $textBox1.Text

if ([System.IO.File]::Exists($path)) {

    $CSV = Import-Csv -LiteralPath "$path"
    Write-Log "path specified was valid"
} else {
    [System.Windows.Forms.MessageBox]::Show("File path specified was not valid" , "ERROR")
    Write-Log "File path specified was not valid"
    Exit
}

# Lets iterate over each line in the CSV file
Write-Log "Starting for each loop for user creation"
foreach($user in $CSV) {

    $enbaled = ([System.Convert]::ToBoolean($user.Enabled))
 
    # Password
    $SecurePassword = ConvertTo-SecureString "$($user.'First Name'[0])$($user.'Last Name')$($user.'Employee ID')!@#" -AsPlainText -Force
    
 
    # Format their username
    $Username = "$($user.'First Name').$($user.'Last Name')"
    $Username = $Username.Replace(" ", "")
 
    # Create new user
    New-ADUser -Name "$($user.'First Name') $($user.'Last Name')" `
                -GivenName $user.'First Name' `
                -Surname $user.'Last Name' `
                -UserPrincipalName $Username `
                -SamAccountName $Username `
                -EmailAddress $user.'Email Address' `
                -Description $user.Description `
                -OfficePhone $user.'Office Phone' `
                -Path "$($user.'Organizational Unit')" `
                -ChangePasswordAtLogon $false `
                -AccountPassword $SecurePassword `
         
}
[System.Windows.Forms.MessageBox]::Show("All Users created" , "Success")
Write-Log "All Users created"
$form1.close()

}

#----------------------------------------------
#Generated Event Script Blocks
#----------------------------------------------
#Provide Custom Code for events specified in PrimalForms.
$handler_btn_imp_Click= 
{

import-user
Write-Log "Clicked Imp-btn"

}

$handler_btn_cnl_Click= 
{

$form1.close()
Write-Log "Form 1 closed"

}

$handler_btn_filedialog_Click= 
{

get-path
Write-Log "Clicked Filedialog_btn"

}

$handler_label1_Click= 
{
#TODO: Place custom script here

}

$OnLoadForm_StateCorrection=
{#Correct the initial state of the form to prevent the .Net maximized form issue
	$form1.WindowState = $InitialFormWindowState
}

#----------------------------------------------
#region Generated Form Code
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 253
$System_Drawing_Size.Width = 442
$form1.ClientSize = $System_Drawing_Size
$form1.DataBindings.DefaultDataSourceUpdateMode = 0
$form1.Name = "form1"
$form1.Text = "CSV-Import"


$btn_cnl.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 239
$System_Drawing_Point.Y = 200
$btn_cnl.Location = $System_Drawing_Point
$btn_cnl.Name = "btn_cnl"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 30
$System_Drawing_Size.Width = 80
$btn_cnl.Size = $System_Drawing_Size
$btn_cnl.TabIndex = 4
$btn_cnl.Text = "Cancel"
$btn_cnl.UseVisualStyleBackColor = $True
$btn_cnl.add_Click($handler_btn_cnl_Click)

$form1.Controls.Add($btn_cnl)


$btn_imp.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 84
$System_Drawing_Point.Y = 200
$btn_imp.Location = $System_Drawing_Point
$btn_imp.Name = "btn_imp"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 30
$System_Drawing_Size.Width = 80
$btn_imp.Size = $System_Drawing_Size
$btn_imp.TabIndex = 3
$btn_imp.Text = "Import"
$btn_imp.UseVisualStyleBackColor = $True
$btn_imp.add_Click($handler_btn_imp_Click)

$form1.Controls.Add($btn_imp)

$textBox1.DataBindings.DefaultDataSourceUpdateMode = 0
$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 84
$System_Drawing_Point.Y = 108
$textBox1.Location = $System_Drawing_Point
$textBox1.Name = "textBox1"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 20
$System_Drawing_Size.Width = 235
$textBox1.Size = $System_Drawing_Size
$textBox1.TabIndex = 2

$form1.Controls.Add($textBox1)


$btn_filedialog.DataBindings.DefaultDataSourceUpdateMode = 0

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 341
$System_Drawing_Point.Y = 106
$btn_filedialog.Location = $System_Drawing_Point
$btn_filedialog.Name = "btn_filedialog"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 23
$System_Drawing_Size.Width = 75
$btn_filedialog.Size = $System_Drawing_Size
$btn_filedialog.TabIndex = 1
$btn_filedialog.Text = "...."
$btn_filedialog.UseVisualStyleBackColor = $True
$btn_filedialog.add_Click($handler_btn_filedialog_Click)

$form1.Controls.Add($btn_filedialog)

$label1.DataBindings.DefaultDataSourceUpdateMode = 0
$label1.Font = New-Object System.Drawing.Font("Microsoft Sans Serif",18,0,3,0)

$System_Drawing_Point = New-Object System.Drawing.Point
$System_Drawing_Point.X = 89
$System_Drawing_Point.Y = 32
$label1.Location = $System_Drawing_Point
$label1.Name = "label1"
$System_Drawing_Size = New-Object System.Drawing.Size
$System_Drawing_Size.Height = 34
$System_Drawing_Size.Width = 265
$label1.Size = $System_Drawing_Size
$label1.TabIndex = 0
$label1.Text = "CSV-Datei importieren"
$label1.add_Click($handler_label1_Click)

$form1.Controls.Add($label1)

#endregion Generated Form Code

#Save the initial state of the form
$InitialFormWindowState = $form1.WindowState
#Init the OnLoad event to correct the initial state of the form
$form1.add_Load($OnLoadForm_StateCorrection)
#Show the Form
$form1.ShowDialog()| Out-Null

} #End Function

#Call the Function
GenerateForm
